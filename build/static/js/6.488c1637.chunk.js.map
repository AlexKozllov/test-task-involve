{"version":3,"sources":["components/pages/infoPage/InfoPageStyles.js","components/pages/infoPage/InfoPage.js","redux/selectors/mainSelector.js","servises/reqToApi.js","redux/operations/mainOperations.js","utils/findUtils.js"],"names":["Details","styled","div","DetailsItem","Buttons","CancelButtons","button","ConfirmButtons","InfoPage","history","useHistory","dispatch","useDispatch","calculation","useSelector","state","preCalculation","methods","payMethods","isLoading","loading","invoice","withdraw","sell","buy","useEffect","amount","push","routers","main","handleConfirm","a","postTransaction","success","Loader","findPayMethod","invoicePayMethod","withdrawPayMethod","onClick","setCalculate","responseBids","axios","defaults","baseURL","getMethods","get","response","data","console","log","getCalculate","base","params","postBids","post","getPayMethods","payMethodsRequest","payMethodsSuccess","payMethodsError","getResCalculate","getState","getCalculateRequest","res","getCalculateSuccess","getCalculateError","postTransactionRequest","postTransactionSuccess","postTransactionError","id","method","find","item","name","findDefaultMethod"],"mappings":"kPAEMA,EAAUC,IAAOC,IAAV,kXAmBPC,EAAcF,IAAOC,IAAV,wWAmBXE,EAAUH,IAAOC,IAAV,uHAOPG,EAAgBJ,IAAOK,OAAV,6eAsBbC,EAAiBN,IAAOK,OAAV,kd,eCMLE,UAvDE,WACf,IAAMC,EAAUC,cACVC,EAAWC,cACXC,EAAcC,aAAY,SAACC,GAAD,OAAWC,YAAeD,MACpDE,EAAUH,aAAY,SAACC,GAAD,OAAWG,YAAWH,MAC5CI,EAAYL,aAAY,SAACC,GAAD,OAAWK,YAAQL,MAEzCM,EAAsBJ,EAAtBI,QAASC,EAAaL,EAAbK,SACTC,EAAcV,EAAdU,KAAMC,EAAQX,EAARW,IAEdC,qBAAU,YACPF,EAAKG,QAAUF,EAAIE,QAAUjB,EAAQkB,KAAKC,IAAQC,QAClD,IAEH,IAIMC,EAAa,uCAAG,sBAAAC,EAAA,sEACdpB,EAASqB,eADK,OAEpBvB,EAAQkB,KAAKC,IAAQK,SAFD,2CAAH,qDAKnB,OACE,gCACGd,GAAa,cAACe,EAAA,EAAD,IACbX,EAAKG,OAASF,EAAIE,QACjB,eAAC1B,EAAD,WACE,yCACA,gCACE,eAACG,EAAD,WACE,qCACA,sCAAOoB,EAAKG,OAAZ,YAAsBS,YACpBZ,EAAKa,iBACLf,SAGJ,eAAClB,EAAD,WACE,oCACA,sCAAOqB,EAAIE,OAAX,YAAqBS,YACnBX,EAAIa,kBACJf,YAIN,eAAClB,EAAD,WACE,cAACC,EAAD,CAAeiC,QAhCJ,WACnB7B,EAAQkB,KAAKC,IAAQC,OA+Bb,oBACA,cAACtB,EAAD,CAAgB+B,QAASR,EAAzB,gC,gCCnEZ,4IAAMZ,EAAa,SAACH,GAClB,OAAOA,EAAMG,WAAWD,SAGpBD,EAAiB,SAACD,GACtB,OAAOA,EAAMG,WAAWqB,cAGpBnB,EAAU,SAACL,GACf,OAAOA,EAAMG,WAAWE,SAGpBoB,EAAe,SAACzB,GACpB,OAAOA,EAAMG,WAAWsB,e,oLCX1BC,IAAMC,SAASC,QAAU,0CAEzB,IAAMC,EAAU,uCAAG,4BAAAb,EAAA,+EAEQU,IAAMI,IAAI,eAFlB,cAETC,EAFS,gBAIFA,EAASC,KAJP,8EAMfC,QAAQC,IAAI,QAAZ,MANe,8DAAH,qDAWVC,EAAY,uCAAG,WACnBC,EACAzB,EACAU,EACAC,GAJmB,eAAAN,EAAA,+EAOMU,IAAMI,IAAI,wBAAyB,CACxDO,OAAQ,CACND,OACAzB,SACAU,mBACAC,uBAZa,cAOXS,EAPW,gBAgBJA,EAASC,KAhBL,8EAkBjBC,QAAQC,IAAI,QAAZ,MAlBiB,8DAAH,4DAuBZI,EAAQ,uCAAG,WAAO3B,EAAQyB,EAAMf,EAAkBC,GAAvC,eAAAN,EAAA,+EAEUU,IAAMa,KAAK,QAAS,CACzC5B,SACAyB,OACAf,mBACAC,sBANW,cAEPS,EAFO,gBASAA,EAASC,KATT,8EAWbC,QAAQC,IAAI,QAAZ,MAXa,8DAAH,4D,OCzBRM,EAAgB,yDAAM,WAAO5C,GAAP,eAAAoB,EAAA,6DAC1BpB,EAAS6C,eADiB,kBAGFZ,IAHE,OAGlB3B,EAHkB,OAKxBN,EAAS8C,YAAkBxC,IALH,gDAOxBN,EAAS+C,YAAgB,EAAD,KAPA,yDAAN,uDAWhBC,EAAkB,yDAAM,WAAOhD,EAAUiD,GAAjB,uBAAA7B,EAAA,2DACN6B,IAAW1C,WAAWqB,aAApChB,EADoB,EACpBA,KAAMC,EADc,EACdA,IACdb,EAASkD,eAFmB,WAItBtC,EAAK4B,MAAQ5B,EAAKa,kBAAoBb,EAAKc,mBAJrB,gCAKNa,EAChB3B,EAAK4B,KACL5B,EAAKG,OACLH,EAAKa,iBACLb,EAAKc,mBATiB,cAKlByB,EALkB,OAWxBnD,EAASoD,YAAoBD,IAXL,+BActBtC,EAAI2B,MAAQ3B,EAAIY,kBAAoBZ,EAAIa,mBAdlB,kCAeNa,EAChB1B,EAAI2B,KACJ3B,EAAIE,OACJF,EAAIY,iBACJZ,EAAIa,mBAnBkB,eAelByB,EAfkB,OAqBxBnD,EAASoD,YAAoBD,IArBL,6EAyB1BnD,EAASqD,YAAkB,EAAD,KAzBA,0DAAN,yDA6BlBhC,EAAkB,yDAAM,WAAOrB,EAAUiD,GAAjB,uBAAA7B,EAAA,2DACN6B,IAAW1C,WAAWqB,aAApChB,EADoB,EACpBA,KAAMC,EADc,EACdA,IACdb,EAASsD,eAFmB,WAItB1C,EAAK4B,MAAQ5B,EAAKa,kBAAoBb,EAAKc,mBAJrB,gCAKNgB,EAChB9B,EAAKG,OACLH,EAAK4B,KACL5B,EAAKa,iBACLb,EAAKc,mBATiB,cAKlByB,EALkB,OAWxBnD,EAASuD,YAAuBJ,IAXR,+BActBtC,EAAI2B,MAAQ3B,EAAIY,kBAAoBZ,EAAIa,mBAdlB,kCAeNgB,EAChB7B,EAAIE,OACJF,EAAI2B,KACJ3B,EAAIY,iBACJZ,EAAIa,mBAnBkB,eAelByB,EAfkB,OAqBxBnD,EAASuD,YAAuBJ,IArBR,6EAyB1BnD,EAASwD,YAAqB,EAAD,KAzBH,0DAAN,0D,gCCrDxB,wEAAMhC,EAAgB,SAACiC,EAAIC,GAEzB,OADaA,EAAOC,MAAK,SAACC,GAAD,OAAUA,EAAKH,KAAOA,KACnCI,MAERC,EAAoB,SAACL,EAAIC,GAE7B,OADaA,EAAOC,MAAK,SAACC,GAAD,OAAUA,EAAKH,KAAOA","file":"static/js/6.488c1637.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Details = styled.div`\r\n  margin: 0 auto;\r\n  padding: 33px;\r\n  padding-bottom: 28px;\r\n  width: 460px;\r\n  height: 319px;\r\n  box-shadow: 0px 8px 28px 0px rgba(0, 0, 0, 0.08);\r\n\r\n  & h3 {\r\n    margin-bottom: 36px;\r\n    font-family: \"Roboto-700\";\r\n    font-size: 48px;\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    line-height: 56px;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nconst DetailsItem = styled.div`\r\n  margin-top: 21px;\r\n  margin-bottom: 33px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-family: \"Roboto-400\";\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 19px;\r\n  text-align: right;\r\n\r\n  & :first-child {\r\n    color: #818181;\r\n  }\r\n`;\r\n\r\nconst Buttons = styled.div`\r\n  margin-top: 48px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n`;\r\n\r\nconst CancelButtons = styled.button`\r\n  width: 125px;\r\n  height: 48px;\r\n  margin-right: 24px;\r\n  background: #fff;\r\n  border: 1px solid #58b4ae;\r\n  border-radius: 5px;\r\n  color: #000;\r\n  font-family: \"Roboto-700\";\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  line-height: 16px;\r\n  text-align: center;\r\n  transition: all ease-in 150ms;\r\n  :hover {\r\n    box-shadow: 0px 3px 3px 0px rgba(0, 0, 0, 0.5);\r\n    transform: translate(-3px, -3px);\r\n    transition: all ease-in 150ms;\r\n  }\r\n`;\r\n\r\nconst ConfirmButtons = styled.button`\r\n  width: 125px;\r\n  height: 48px;\r\n  background: #58b4ae;\r\n  border-style: none;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n  font-family: \"Roboto-700\";\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  line-height: 16px;\r\n  text-align: center;\r\n  transition: all ease-in 150ms;\r\n  :hover {\r\n    box-shadow: 0px 3px 3px 0px rgba(0, 0, 0, 0.5);\r\n    transform: translate(-3px, -3px);\r\n    transition: all ease-in 150ms;\r\n  }\r\n`;\r\nexport { Details, DetailsItem, Buttons, CancelButtons, ConfirmButtons };\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport Loader from \"../../loader/Loader\";\r\nimport { postTransaction } from \"../../../redux/operations/mainOperations\";\r\nimport routers from \"../../../routers/routers\";\r\nimport { findPayMethod } from \"../../../utils/findUtils\";\r\nimport {\r\n  Buttons,\r\n  CancelButtons,\r\n  Details,\r\n  DetailsItem,\r\n  ConfirmButtons,\r\n} from \"./InfoPageStyles\";\r\nimport {\r\n  payMethods,\r\n  preCalculation,\r\n  loading,\r\n} from \"../../../redux/selectors/mainSelector\";\r\n\r\nconst InfoPage = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const calculation = useSelector((state) => preCalculation(state));\r\n  const methods = useSelector((state) => payMethods(state));\r\n  const isLoading = useSelector((state) => loading(state));\r\n\r\n  const { invoice, withdraw } = methods;\r\n  const { sell, buy } = calculation;\r\n\r\n  useEffect(() => {\r\n    !sell.amount | !buy.amount && history.push(routers.main);\r\n  }, []);\r\n\r\n  const handleCancel = () => {\r\n    history.push(routers.main);\r\n  };\r\n\r\n  const handleConfirm = async () => {\r\n    await dispatch(postTransaction());\r\n    history.push(routers.success);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && <Loader />}\r\n      {sell.amount | buy.amount && (\r\n        <Details>\r\n          <h3>Details</h3>\r\n          <div>\r\n            <DetailsItem>\r\n              <p>Sell</p>\r\n              <p>{`${sell.amount} ${findPayMethod(\r\n                sell.invoicePayMethod,\r\n                invoice\r\n              )}`}</p>\r\n            </DetailsItem>\r\n            <DetailsItem>\r\n              <p>Buy</p>\r\n              <p>{`${buy.amount} ${findPayMethod(\r\n                buy.withdrawPayMethod,\r\n                withdraw\r\n              )}`}</p>\r\n            </DetailsItem>\r\n          </div>\r\n          <Buttons>\r\n            <CancelButtons onClick={handleCancel}>Cancel</CancelButtons>\r\n            <ConfirmButtons onClick={handleConfirm}>Confirm</ConfirmButtons>\r\n          </Buttons>\r\n        </Details>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoPage;\r\n","const payMethods = (state) => {\r\n  return state.payMethods.methods;\r\n};\r\n\r\nconst preCalculation = (state) => {\r\n  return state.payMethods.setCalculate;\r\n};\r\n\r\nconst loading = (state) => {\r\n  return state.payMethods.loading;\r\n};\r\n\r\nconst responseBids = (state) => {\r\n  return state.payMethods.responseBids;\r\n};\r\n\r\nexport { payMethods, preCalculation, loading, responseBids };\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://involve.software/test_front/api\";\r\n\r\nconst getMethods = async () => {\r\n  try {\r\n    const response = await axios.get(\"/payMethods\");\r\n\r\n    return await response.data;\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst getCalculate = async (\r\n  base,\r\n  amount,\r\n  invoicePayMethod,\r\n  withdrawPayMethod\r\n) => {\r\n  try {\r\n    const response = await axios.get(\"/payMethods/calculate\", {\r\n      params: {\r\n        base,\r\n        amount,\r\n        invoicePayMethod,\r\n        withdrawPayMethod,\r\n      },\r\n    });\r\n\r\n    return await response.data;\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst postBids = async (amount, base, invoicePayMethod, withdrawPayMethod) => {\r\n  try {\r\n    const response = await axios.post(\"/bids\", {\r\n      amount,\r\n      base,\r\n      invoicePayMethod,\r\n      withdrawPayMethod,\r\n    });\r\n\r\n    return await response.data;\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport { getMethods, getCalculate, postBids };\r\n","import { getMethods, getCalculate, postBids } from \"../../servises/reqToApi\";\r\nimport {\r\n  payMethodsRequest,\r\n  payMethodsSuccess,\r\n  payMethodsError,\r\n  getCalculateRequest,\r\n  getCalculateSuccess,\r\n  getCalculateError,\r\n  postTransactionRequest,\r\n  postTransactionSuccess,\r\n  postTransactionError,\r\n} from \"../actions/mainAction\";\r\n\r\nconst getPayMethods = () => async (dispatch) => {\r\n  dispatch(payMethodsRequest());\r\n  try {\r\n    const methods = await getMethods();\r\n\r\n    dispatch(payMethodsSuccess(methods));\r\n  } catch (error) {\r\n    dispatch(payMethodsError(error));\r\n  }\r\n};\r\n\r\nconst getResCalculate = () => async (dispatch, getState) => {\r\n  const { sell, buy } = getState().payMethods.setCalculate;\r\n  dispatch(getCalculateRequest());\r\n  try {\r\n    if (sell.base && sell.invoicePayMethod && sell.withdrawPayMethod) {\r\n      const res = await getCalculate(\r\n        sell.base,\r\n        sell.amount,\r\n        sell.invoicePayMethod,\r\n        sell.withdrawPayMethod\r\n      );\r\n      dispatch(getCalculateSuccess(res));\r\n      return;\r\n    }\r\n    if (buy.base && buy.invoicePayMethod && buy.withdrawPayMethod) {\r\n      const res = await getCalculate(\r\n        buy.base,\r\n        buy.amount,\r\n        buy.invoicePayMethod,\r\n        buy.withdrawPayMethod\r\n      );\r\n      dispatch(getCalculateSuccess(res));\r\n      return;\r\n    }\r\n  } catch (error) {\r\n    dispatch(getCalculateError(error));\r\n  }\r\n};\r\n\r\nconst postTransaction = () => async (dispatch, getState) => {\r\n  const { sell, buy } = getState().payMethods.setCalculate;\r\n  dispatch(postTransactionRequest());\r\n  try {\r\n    if (sell.base && sell.invoicePayMethod && sell.withdrawPayMethod) {\r\n      const res = await postBids(\r\n        sell.amount,\r\n        sell.base,\r\n        sell.invoicePayMethod,\r\n        sell.withdrawPayMethod\r\n      );\r\n      dispatch(postTransactionSuccess(res));\r\n      return;\r\n    }\r\n    if (buy.base && buy.invoicePayMethod && buy.withdrawPayMethod) {\r\n      const res = await postBids(\r\n        buy.amount,\r\n        buy.base,\r\n        buy.invoicePayMethod,\r\n        buy.withdrawPayMethod\r\n      );\r\n      dispatch(postTransactionSuccess(res));\r\n      return;\r\n    }\r\n  } catch (error) {\r\n    dispatch(postTransactionError(error));\r\n  }\r\n};\r\n\r\nexport { getPayMethods, getResCalculate, postTransaction };\r\n","const findPayMethod = (id, method) => {\r\n  const item = method.find((item) => item.id === id);\r\n  return item.name;\r\n};\r\nconst findDefaultMethod = (id, method) => {\r\n  const item = method.find((item) => item.id === id);\r\n  return item;\r\n};\r\n\r\nexport { findPayMethod, findDefaultMethod };\r\n"],"sourceRoot":""}