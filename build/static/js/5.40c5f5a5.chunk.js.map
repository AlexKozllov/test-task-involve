{"version":3,"sources":["components/loaderInput/LoaderInput.module.scss","components/purchaseForm/styleForm.js","components/loaderInput/LoaderInput.js","components/purchaseForm/PurchaseForm.js","components/pages/mainPage/MainPageStyles.js","components/pages/mainPage/MainPage.js","redux/selectors/mainSelector.js","servises/reqToApi.js","redux/operations/mainOperations.js","utils/findUtils.js"],"names":["module","exports","SelectLabel","styled","div","InputContainer","customStyles","option","provided","state","padding","fontSize","fontFamily","fontStyle","fontWeight","textAlign","control","border","menuIsOpen","borderRadius","width","height","display","flexDirection","justifyContent","menu","boxShadow","color","selectProps","menuColor","singleValue","opacity","isDisabled","transition","dropdownIndicator","base","transform","LoaderInput","className","s","modalLoader","loader","type","PurchaseForm","payment","methods","currentAmount","dispatch","useDispatch","staeMethods","useSelector","payMethods","calculation","preCalculation","sell","buy","loadingInput","invoice","withdraw","debouncedFetch","useDebouncedCallback","value","getResCalculate","length","classNamePrefix","data-base","defaultValue","findDefaultMethod","invoicePayMethod","id","label","name","withdrawPayMethod","onChange","e","setCalculatePayMethod","isLoading","styles","theme","colors","primary25","primary50","primary","neutral60","options","reduce","acc","item","push","target","dataset","isNaN","isValid","invoiceAmoumt","amount","Number","withdrawAmoumt","MainPageStyles","SelectWrapper","SelectButton","input","MainPage","history","useHistory","currentSell","currentBuy","useEffect","getPayMethods","onSubmit","preventDefault","routers","info","disabled","setCalculate","loading","responseBids","axios","defaults","baseURL","getMethods","a","get","response","data","console","log","getCalculate","params","postBids","post","payMethodsRequest","payMethodsSuccess","payMethodsError","getState","getCalculateRequest","res","getCalculateSuccess","getCalculateError","postTransaction","postTransactionRequest","postTransactionSuccess","postTransactionError","findPayMethod","method","find"],"mappings":"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","file":"static/js/5.40c5f5a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalLoader\":\"LoaderInput_modalLoader__Ad2FP\"};","import styled from \"styled-components\";\r\n\r\nconst SelectLabel = styled.div`\r\n  margin: 28px 32px;\r\n  & h3 {\r\n    font-family: Roboto;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n    font-size: 48px;\r\n    line-height: 56px;\r\n  }\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  width: 313px;\r\n  height: 46px;\r\n  margin-top: 20px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  border: 1px solid #cbcbcb;\r\n  border-radius: 5px;\r\n  & input {\r\n    width: 313px;\r\n    height: 44px;\r\n\r\n    padding-left: 20px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    outline: none;\r\n    display: block;\r\n    font-family: Roboto;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 19px;\r\n    letter-spacing: 0em;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nconst customStyles = {\r\n  option: (provided, state) => {\r\n    return {\r\n      ...provided,\r\n      padding: 5,\r\n      fontSize: 18,\r\n      fontFamily: \"Roboto\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: 500,\r\n      textAlign: \"left\",\r\n    };\r\n  },\r\n  control: (provided, state) => {\r\n    return {\r\n      border: state.menuIsOpen ? \"1px solid #58B4AE\" : \"1px solid #CBCBCB\",\r\n\r\n      borderRadius: 4,\r\n\r\n      width: 313,\r\n      height: 46,\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n      fontSize: 18,\r\n      fontFamily: \"Roboto\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: 500,\r\n      textAlign: \"left\",\r\n    };\r\n  },\r\n\r\n  menu: (provided, state) => {\r\n    return {\r\n      ...provided,\r\n      width: 313,\r\n      boxShadow: \"0px 4px 8px rgba(0, 0, 0, 0.16)\",\r\n      borderRadius: 4,\r\n      color: state.selectProps.menuColor,\r\n      padding: 5,\r\n    };\r\n  },\r\n  singleValue: (provided, state) => {\r\n    const opacity = state.isDisabled ? 0.5 : 1;\r\n    const transition = \"opacity 300ms\";\r\n    return {\r\n      ...provided,\r\n      opacity,\r\n      transition,\r\n    };\r\n  },\r\n  dropdownIndicator: (base, state) => ({\r\n    ...base,\r\n    transition: \"all .2s ease\",\r\n    transform: state.selectProps.menuIsOpen ? \"rotate(180deg)\" : null,\r\n  }),\r\n};\r\nexport { SelectLabel, customStyles, InputContainer };\r\n","import React from \"react\";\r\nimport LoaderSpinner from \"react-loader-spinner\";\r\nimport s from \"./LoaderInput.module.scss\";\r\n\r\nconst LoaderInput = () => {\r\n  return (\r\n    <div className={s.modalLoader}>\r\n      <LoaderSpinner\r\n        className={s.loader}\r\n        type=\"TailSpin\"\r\n        color=\"#3E7E7C\"\r\n        height={18}\r\n        width={18}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderInput;\r\n","import React from \"react\";\r\nimport { customStyles, SelectLabel, InputContainer } from \"./styleForm\";\r\nimport Select from \"react-select\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  invoiceAmoumt,\r\n  setCalculatePayMethod,\r\n  withdrawAmoumt,\r\n} from \"../../redux/actions/mainAction\";\r\nimport { getResCalculate } from \"../../redux/operations/mainOperations\";\r\nimport { useDebouncedCallback } from \"use-debounce/lib\";\r\nimport { findDefaultMethod } from \"../../utils/findUtils\";\r\nimport LoaderInput from \"../loaderInput/LoaderInput\";\r\nimport { payMethods, preCalculation } from \"../../redux/selectors/mainSelector\";\r\n\r\nconst PurchaseForm = ({ payment, methods, currentAmount }) => {\r\n  const dispatch = useDispatch();\r\n  const staeMethods = useSelector((state) => payMethods(state));\r\n  const calculation = useSelector((state) => preCalculation(state));\r\n\r\n  const { sell, buy, loadingInput } = calculation;\r\n  const { invoice, withdraw } = staeMethods;\r\n\r\n  const dataPreparation = () =>\r\n    methods.reduce((acc, item) => {\r\n      acc.push({ value: item.id, label: item.name });\r\n      return acc;\r\n    }, []);\r\n\r\n  const isValid = (value) => {\r\n    return !isNaN(value);\r\n  };\r\n\r\n  const debouncedFetch = useDebouncedCallback((value) => {\r\n    dispatch(getResCalculate());\r\n  }, 300);\r\n\r\n  const handleInputAmount = (e) => {\r\n    const { value } = e.target;\r\n    const { base } = e.target.dataset;\r\n    if (isValid(value)) {\r\n      payment === \"invoice\" &&\r\n        dispatch(invoiceAmoumt({ amount: Number(value), base }));\r\n      payment === \"withdraw\" &&\r\n        dispatch(withdrawAmoumt({ amount: Number(value), base }));\r\n      debouncedFetch();\r\n    }\r\n  };\r\n\r\n  const defaultValue = () => {\r\n    if (payment === \"invoice\") {\r\n      const value = findDefaultMethod(sell.invoicePayMethod, invoice);\r\n      return {\r\n        value: value.id,\r\n        label: value.name,\r\n      };\r\n    }\r\n    if (payment === \"withdraw\") {\r\n      const value = findDefaultMethod(buy.withdrawPayMethod, withdraw);\r\n      return {\r\n        value: value.id,\r\n        label: value.name,\r\n      };\r\n    }\r\n  };\r\n\r\n  const handlSelect = (e) => {\r\n    dispatch(setCalculatePayMethod({ payment, value: e.value }));\r\n    dispatch(getResCalculate());\r\n  };\r\n  return (\r\n    <SelectLabel>\r\n      <h3>{payment === \"invoice\" && \"Sell\"}</h3>\r\n      <h3>{payment === \"withdraw\" && \"Buy\"}</h3>\r\n      {methods.length > 0 && (\r\n        <Select\r\n          className=\"basic-single\"\r\n          classNamePrefix=\"select\"\r\n          data-base={payment}\r\n          defaultValue={defaultValue()}\r\n          onChange={handlSelect}\r\n          isLoading={false}\r\n          name={payment}\r\n          styles={customStyles}\r\n          theme={(theme) => {\r\n            return {\r\n              ...theme,\r\n              colors: {\r\n                ...theme.colors,\r\n                primary25: \"#F4F4F4\",\r\n                primary50: \"#58B4AE\",\r\n                primary: \"#58B4AE\",\r\n                neutral60: \"#58B4AE\",\r\n              },\r\n            };\r\n          }}\r\n          options={dataPreparation()}\r\n        />\r\n      )}\r\n      <InputContainer>\r\n        <input\r\n          type=\"text\"\r\n          data-base={payment}\r\n          value={currentAmount}\r\n          onChange={handleInputAmount}\r\n        />\r\n        {loadingInput && <LoaderInput />}\r\n      </InputContainer>\r\n    </SelectLabel>\r\n  );\r\n};\r\n\r\nexport default PurchaseForm;\r\n","import styled from \"styled-components\";\r\n\r\nconst MainPageStyles = styled.div`\r\n  margin: 0 auto;\r\n  width: 754px;\r\n  height: 344px;\r\n  box-shadow: 0px 8px 28px 0px rgba(0, 0, 0, 0.08);\r\n`;\r\n\r\nconst SelectWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst SelectButton = styled.input`\r\n  display: block;\r\n  width: 125px;\r\n  height: 48px;\r\n  margin: 0 auto;\r\n  background: #58b4ae;\r\n  color: #fff;\r\n  font-family: \"Roboto-700\";\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  line-height: 16px;\r\n  letter-spacing: 0em;\r\n  text-align: center;\r\n  border: none;\r\n  border-radius: 5px;\r\n  transition: all ease-in 150ms;\r\n  :hover {\r\n    box-shadow: 0px 3px 3px 0px rgba(0, 0, 0, 0.5);\r\n    transform: translate(-3px, -3px);\r\n    transition: all ease-in 150ms;\r\n  }\r\n  :disabled {\r\n    background: #58b4ae91;\r\n    box-shadow: none;\r\n    transform: none;\r\n  }\r\n`;\r\n\r\nexport { MainPageStyles, SelectWrapper, SelectButton };\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport { getPayMethods } from \"../../../redux/operations/mainOperations\";\r\nimport routers from \"../../../routers/routers\";\r\n\r\nimport PurchaseForm from \"../../purchaseForm/PurchaseForm\";\r\nimport { MainPageStyles, SelectWrapper, SelectButton } from \"./MainPageStyles\";\r\n\r\nimport {\r\n  payMethods,\r\n  preCalculation,\r\n} from \"../../../redux/selectors/mainSelector\";\r\n\r\nconst MainPage = () => {\r\n  const dispatch = useDispatch();\r\n  const methods = useSelector((state) => payMethods(state));\r\n  const calculation = useSelector((state) => preCalculation(state));\r\n  const history = useHistory();\r\n  const { sell: currentSell, buy: currentBuy } = calculation;\r\n  useEffect(() => {\r\n    dispatch(getPayMethods());\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (currentSell.base || currentBuy.base) {\r\n      history.push(routers.info);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainPageStyles>\r\n      <form onSubmit={handleSubmit}>\r\n        <SelectWrapper className=\"\">\r\n          <PurchaseForm\r\n            payment=\"invoice\"\r\n            methods={methods.invoice}\r\n            currentAmount={currentSell.amount}\r\n          ></PurchaseForm>\r\n          <PurchaseForm\r\n            payment=\"withdraw\"\r\n            methods={methods.withdraw}\r\n            currentAmount={currentBuy.amount}\r\n          ></PurchaseForm>\r\n        </SelectWrapper>\r\n\r\n        <SelectButton\r\n          type=\"submit\"\r\n          disabled={!currentSell.amount || !currentBuy.amount}\r\n          value=\"Exchange\"\r\n        />\r\n      </form>\r\n    </MainPageStyles>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","const payMethods = (state) => {\r\n  return state.payMethods.methods;\r\n};\r\n\r\nconst preCalculation = (state) => {\r\n  return state.payMethods.setCalculate;\r\n};\r\n\r\nconst loading = (state) => {\r\n  return state.payMethods.loading;\r\n};\r\n\r\nconst responseBids = (state) => {\r\n  return state.payMethods.responseBids;\r\n};\r\n\r\nexport { payMethods, preCalculation, loading, responseBids };\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://involve.software/test_front/api\";\r\n\r\nconst getMethods = async () => {\r\n  try {\r\n    const response = await axios.get(\"/payMethods\");\r\n\r\n    return await response.data;\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst getCalculate = async (\r\n  base,\r\n  amount,\r\n  invoicePayMethod,\r\n  withdrawPayMethod\r\n) => {\r\n  try {\r\n    const response = await axios.get(\"/payMethods/calculate\", {\r\n      params: {\r\n        base,\r\n        amount,\r\n        invoicePayMethod,\r\n        withdrawPayMethod,\r\n      },\r\n    });\r\n\r\n    return await response.data;\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst postBids = async (amount, base, invoicePayMethod, withdrawPayMethod) => {\r\n  try {\r\n    const response = await axios.post(\"/bids\", {\r\n      amount,\r\n      base,\r\n      invoicePayMethod,\r\n      withdrawPayMethod,\r\n    });\r\n\r\n    return await response.data;\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport { getMethods, getCalculate, postBids };\r\n","import { getMethods, getCalculate, postBids } from \"../../servises/reqToApi\";\r\nimport {\r\n  payMethodsRequest,\r\n  payMethodsSuccess,\r\n  payMethodsError,\r\n  getCalculateRequest,\r\n  getCalculateSuccess,\r\n  getCalculateError,\r\n  postTransactionRequest,\r\n  postTransactionSuccess,\r\n  postTransactionError,\r\n} from \"../actions/mainAction\";\r\n\r\nconst getPayMethods = () => async (dispatch) => {\r\n  dispatch(payMethodsRequest());\r\n  try {\r\n    const methods = await getMethods();\r\n\r\n    dispatch(payMethodsSuccess(methods));\r\n  } catch (error) {\r\n    dispatch(payMethodsError(error));\r\n  }\r\n};\r\n\r\nconst getResCalculate = () => async (dispatch, getState) => {\r\n  const { sell, buy } = getState().payMethods.setCalculate;\r\n  dispatch(getCalculateRequest());\r\n  try {\r\n    if (sell.base && sell.invoicePayMethod && sell.withdrawPayMethod) {\r\n      const res = await getCalculate(\r\n        sell.base,\r\n        sell.amount,\r\n        sell.invoicePayMethod,\r\n        sell.withdrawPayMethod\r\n      );\r\n      dispatch(getCalculateSuccess(res));\r\n      return;\r\n    }\r\n    if (buy.base && buy.invoicePayMethod && buy.withdrawPayMethod) {\r\n      const res = await getCalculate(\r\n        buy.base,\r\n        buy.amount,\r\n        buy.invoicePayMethod,\r\n        buy.withdrawPayMethod\r\n      );\r\n      dispatch(getCalculateSuccess(res));\r\n      return;\r\n    }\r\n  } catch (error) {\r\n    dispatch(getCalculateError(error));\r\n  }\r\n};\r\n\r\nconst postTransaction = () => async (dispatch, getState) => {\r\n  const { sell, buy } = getState().payMethods.setCalculate;\r\n  dispatch(postTransactionRequest());\r\n  try {\r\n    if (sell.base && sell.invoicePayMethod && sell.withdrawPayMethod) {\r\n      const res = await postBids(\r\n        sell.amount,\r\n        sell.base,\r\n        sell.invoicePayMethod,\r\n        sell.withdrawPayMethod\r\n      );\r\n      dispatch(postTransactionSuccess(res));\r\n      return;\r\n    }\r\n    if (buy.base && buy.invoicePayMethod && buy.withdrawPayMethod) {\r\n      const res = await postBids(\r\n        buy.amount,\r\n        buy.base,\r\n        buy.invoicePayMethod,\r\n        buy.withdrawPayMethod\r\n      );\r\n      dispatch(postTransactionSuccess(res));\r\n      return;\r\n    }\r\n  } catch (error) {\r\n    dispatch(postTransactionError(error));\r\n  }\r\n};\r\n\r\nexport { getPayMethods, getResCalculate, postTransaction };\r\n","const findPayMethod = (id, method) => {\r\n  const item = method.find((item) => item.id === id);\r\n  return item.name;\r\n};\r\nconst findDefaultMethod = (id, method) => {\r\n  const item = method.find((item) => item.id === id);\r\n  return item;\r\n};\r\n\r\nexport { findPayMethod, findDefaultMethod };\r\n"],"sourceRoot":""}